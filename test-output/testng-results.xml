<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="2" ignored="0" total="2" passed="0">
  <reporter-output>
    <line>
      <![CDATA[The Risk ID captured is RSKT904]]>
    </line>
    <line>
      <![CDATA[The captured description :The organization:
a. Develops, documents, and disseminates to [Assignment: organization-defined personnel or roles]:
1. An identification and authentication policy that addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and compliance; and
2. Procedures to facilitate the implementation of the identification and authentication policy and associated identification and authentication controls; and
b. Reviews and updates the current:
1. Identification and authentication policy [Assignment: organization-defined frequency]; and
2. Identificatio]]>
    </line>
    <line>
      <![CDATA[The Target Quarter is :]]>
    </line>
    <line>
      <![CDATA[Would you like to Save this risk and Forward for approval?]]>
    </line>
  </reporter-output>
  <suite name="Default suite" duration-ms="103559" started-at="2023-05-07T20:49:53 IST" finished-at="2023-05-07T20:51:36 IST">
    <groups>
    </groups>
    <test name="Default test" duration-ms="103559" started-at="2023-05-07T20:49:53 IST" finished-at="2023-05-07T20:51:36 IST">
      <class name="technologyRisk.ToApproveTheRisk">
        <test-method status="PASS" signature="initialiseExtendReports()[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431]" name="initialiseExtendReports" is-config="true" duration-ms="1234" started-at="2023-05-07T20:49:51 IST" finished-at="2023-05-07T20:49:53 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialiseExtendReports -->
        <test-method status="PASS" signature="driver(org.testng.ITestContext,java.lang.String)[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431]" name="driver" is-config="true" duration-ms="29599" started-at="2023-05-07T20:49:53 IST" finished-at="2023-05-07T20:50:22 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@30b975ad]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[chrome]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- driver -->
        <test-method status="FAIL" signature="toApproveAndEditAndDeleteTechnologyRiskAssessment([Ljava.lang.String;)[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431]" name="toApproveAndEditAndDeleteTechnologyRiskAssessment" duration-ms="41963" started-at="2023-05-07T20:50:31 IST" data-provider="getData" finished-at="2023-05-07T20:51:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@56637cff]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.ElementClickInterceptedException">
            <message>
              <![CDATA[element click intercepted: Element <a class="green" href="#" onclick="approveRiskAssessment('83dc506c-20d8-48e7-af9b-9ee97e3a99eb','RSKT904','Technology')">...</a> is not clickable at point (1342, 586). Other element would receive the click: <a href="#" id="btn-scroll-up" class="btn-scroll-up btn btn-sm btn-inverse display">...</a>
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-4SLAKQP', ip: '192.168.0.105', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\USER\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:64398}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0cc4f791698faae8a62224c16980c03b]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.ElementClickInterceptedException: element click intercepted: Element <a class="green" href="#" onclick="approveRiskAssessment('83dc506c-20d8-48e7-af9b-9ee97e3a99eb','RSKT904','Technology')">...</a> is not clickable at point (1342, 586). Other element would receive the click: <a href="#" id="btn-scroll-up" class="btn-scroll-up btn btn-sm btn-inverse display">...</a>
  (Session info: chrome=112.0.5615.138)
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-4SLAKQP', ip: '192.168.0.105', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\USER\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:64398}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0cc4f791698faae8a62224c16980c03b
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:285)
at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:84)
at technologyRisk.ToApproveTheRisk.toApproveAndEditAndDeleteTechnologyRiskAssessment(ToApproveTheRisk.java:149)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.ElementClickInterceptedException -->
          <reporter-output>
            <line>
              <![CDATA[The Risk ID captured is RSKT904]]>
            </line>
            <line>
              <![CDATA[The captured description :The organization:
a. Develops, documents, and disseminates to [Assignment: organization-defined personnel or roles]:
1. An identification and authentication policy that addresses purpose, scope, roles, responsibilities, management commitment, coordination among organizational entities, and compliance; and
2. Procedures to facilitate the implementation of the identification and authentication policy and associated identification and authentication controls; and
b. Reviews and updates the current:
1. Identification and authentication policy [Assignment: organization-defined frequency]; and
2. Identificatio]]>
            </line>
            <line>
              <![CDATA[The Target Quarter is :]]>
            </line>
            <line>
              <![CDATA[Would you like to Save this risk and Forward for approval?]]>
            </line>
          </reporter-output>
        </test-method> <!-- toApproveAndEditAndDeleteTechnologyRiskAssessment -->
        <test-method status="PASS" signature="quit(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431]" name="quit" is-config="true" duration-ms="342" started-at="2023-05-07T20:51:13 IST" finished-at="2023-05-07T20:51:13 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void technologyRisk.ToApproveTheRisk.toApproveAndEditAndDeleteTechnologyRiskAssessment(java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=toApproveAndEditAndDeleteTechnologyRiskAssessment status=FAILURE method=ToApproveTheRisk.toApproveAndEditAndDeleteTechnologyRiskAssessment([Ljava.lang.String;)[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431] output=The Risk ID captured is RSKT904]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="FAIL" signature="toApproveAndEditAndDeleteTechnologyRiskAssessment([Ljava.lang.String;)[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431]" name="toApproveAndEditAndDeleteTechnologyRiskAssessment" duration-ms="21254" started-at="2023-05-07T20:51:13 IST" data-provider="getData" finished-at="2023-05-07T20:51:34 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[[Ljava.lang.String;@ff23ae7]]>
              </value>
            </param>
          </params>
          <exception class="org.openqa.selenium.TimeoutException">
            <message>
              <![CDATA[Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //i[text()='Technology Risks Assessment']' (tried for 15 second(s) with 500 milliseconds interval)]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator 'By.xpath: //i[text()='Technology Risks Assessment']' (tried for 15 second(s) with 500 milliseconds interval)
at org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:95)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)
at technologyRisk.ToApproveTheRisk.toApproveAndEditAndDeleteTechnologyRiskAssessment(ToApproveTheRisk.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:371)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:332)
at org.testng.SuiteRunner.run(SuiteRunner.java:276)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1212)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1134)
at org.testng.TestNG.runSuites(TestNG.java:1063)
at org.testng.TestNG.run(TestNG.java:1031)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":"//i[text()='Technology Risks Assessment']"}
  (Session info: chrome=112.0.5615.138)
For documentation on this error, please visit: https://www.seleniumhq.org/exceptions/no_such_element.html
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:17:03'
System info: host: 'DESKTOP-4SLAKQP', ip: '192.168.0.105', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '1.8.0_202'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 112.0.5615.138, chrome: {chromedriverVersion: 112.0.5615.49 (bd2a7bcb881c..., userDataDir: C:\Users\USER\AppData\Local...}, goog:chromeOptions: {debuggerAddress: localhost:64398}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:extension:minPinLength: true, webauthn:extension:prf: true, webauthn:virtualAuthenticators: true}
Session ID: 0cc4f791698faae8a62224c16980c03b
*** Element info: {Using=xpath, value=//i[text()='Technology Risks Assessment']}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:552)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:323)
at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:428)
at org.openqa.selenium.By$ByXPath.findElement(By.java:353)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:315)
at org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)
at com.sun.proxy.$Proxy17.isDisplayed(Unknown Source)
at org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:314)
at org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:43)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:300)
at org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:297)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:670)
at org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:666)
at org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)
... 29 more
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.TimeoutException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- toApproveAndEditAndDeleteTechnologyRiskAssessment -->
        <test-method status="PASS" signature="quit(java.lang.reflect.Method,org.testng.ITestResult)[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431]" name="quit" is-config="true" duration-ms="323" started-at="2023-05-07T20:51:34 IST" finished-at="2023-05-07T20:51:35 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void technologyRisk.ToApproveTheRisk.toApproveAndEditAndDeleteTechnologyRiskAssessment(java.lang.String[]) throws java.lang.InterruptedException]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[[TestResult name=toApproveAndEditAndDeleteTechnologyRiskAssessment status=FAILURE method=ToApproveTheRisk.toApproveAndEditAndDeleteTechnologyRiskAssessment([Ljava.lang.String;)[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="quit()[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431]" name="quit" is-config="true" duration-ms="1463" started-at="2023-05-07T20:51:35 IST" finished-at="2023-05-07T20:51:36 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- quit -->
        <test-method status="PASS" signature="generateExtentReports()[pri:0, instance:technologyRisk.ToApproveTheRisk@1060b431]" name="generateExtentReports" is-config="true" duration-ms="4017" started-at="2023-05-07T20:51:36 IST" finished-at="2023-05-07T20:51:40 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- generateExtentReports -->
      </class> <!-- technologyRisk.ToApproveTheRisk -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
